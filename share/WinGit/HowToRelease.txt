How to create a Windows Release
===============================

A setup executable is named as follows
 - it starts with Git;
 - followed by the official git version if the release is closely
   related to a specific version of official git;
 - followed by
    * preview<date>, for snapshot builds.
    * winrc#, if we reach a certain quality level and plan to release
      a stable version.  If no bugs are found, this can be upgraded
      to a stable release.  We use winrc instead of simply rc to avoid
      confusion with official release candidates.  The prefix "win"
      clearly indicates that the tag is about the Windows release.

Examples:

Git-preview20080313.exe
Git-1.5.4-preview20071014.exe
Git-1.5.4-winrc3.exe
Git-1.5.4.exe

We'll not necessary release a stable version for each official version
number. If we merge changes from git.git we will adjust the number.
We will continue releasing previews until we have reached sufficient
stability.

The following criteria should be met before we go stable.
    * features equivalent to official git-#-#-# are available in Git Bash.
    * [DONE] safe crlf handling.
    * good support for case insensitive filesystems.
    * [DONE] git-gui works if run from Git Bash.
    * [DONE] git-gui works if run from Start Menu.
    * [DONE] git and git-gui available from Windows Command Prompt (cmd shell).
    * server functionality (git-daemon, git-shell, ...) _not_ necessarily
      supported.
    * git-cheetah _not_ needed.

For now we should only release previews.


He are the step by step instructions for the maintainer:

   cd /git
   git fetch mingw
   git fetch junio
   git checkout devel
   git merge mingw/master
   make clean
   make install
   make -k test | tee test.log
   # check test.log
   git push . devel:master  # should fast-forward

   cd /doc/git/html
   git fetch
   git checkout origin/html

   cd /share/WinGit
   git checkout devel
   start ReleaseNotes.rtf # edit and save
   git commit -a
   git push . devel:master
   git tag -a -m "Git-<version>"
   ./release.sh <version>

   # test installer
   # upload to Google code (verify sha1)
   cd /git
   git push
   cd /
   git push
   git push Git-<version>  # don't forget to push tag

   # reply to Junio's announcement
