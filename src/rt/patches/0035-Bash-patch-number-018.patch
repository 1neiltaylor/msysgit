From c76d1d68313c869231a2e9a0ba677f819b564d1d Mon Sep 17 00:00:00 2001
From: Thomas Braun <thomas.braun@byte-physics.de>
Date: Thu, 25 Sep 2014 00:56:02 +0200
Subject: [PATCH 35/35] Bash patch number 018

---
 msys/packages/bash/3.1/builtins/common.h     |  2 ++
 msys/packages/bash/3.1/builtins/evalstring.c | 11 +++++++++++
 msys/packages/bash/3.1/patchlevel.h          |  2 +-
 msys/packages/bash/3.1/variables.c           | 14 ++++----------
 4 files changed, 18 insertions(+), 11 deletions(-)

diff --git a/msys/packages/bash/3.1/builtins/common.h b/msys/packages/bash/3.1/builtins/common.h
index df30325..8397f4d 100644
--- a/msys/packages/bash/3.1/builtins/common.h
+++ b/msys/packages/bash/3.1/builtins/common.h
@@ -33,6 +33,8 @@
 #define SEVAL_RESETLINE	0x010
 
 /* Flags for describe_command, shared between type.def and command.def */
+#define SEVAL_FUNCDEF	0x080		/* only allow function definitions */
+#define SEVAL_ONECMD	0x100		/* only allow a single command */
 #define CDESC_ALL		0x001	/* type -a */
 #define CDESC_SHORTDESC		0x002	/* command -V */
 #define CDESC_REUSABLE		0x004	/* command -v */
diff --git a/msys/packages/bash/3.1/builtins/evalstring.c b/msys/packages/bash/3.1/builtins/evalstring.c
index 04afac3..bbef9a3 100644
--- a/msys/packages/bash/3.1/builtins/evalstring.c
+++ b/msys/packages/bash/3.1/builtins/evalstring.c
@@ -223,6 +223,14 @@ parse_and_execute (string, from_file, flags)
 	    {
 	      struct fd_bitmap *bitmap;
 
+	      if ((flags & SEVAL_FUNCDEF) && command->type != cm_function_def)
+		{
+		  internal_warning ("%s: ignoring function definition attempt", from_file);
+		  should_jump_to_top_level = 0;
+		  last_result = last_command_exit_value = EX_BADUSAGE;
+		  break;
+		}
+
 	      bitmap = new_fd_bitmap (FD_BITMAP_SIZE);
 	      begin_unwind_frame ("pe_dispose");
 	      add_unwind_protect (dispose_fd_bitmap, bitmap);
@@ -278,6 +286,9 @@ parse_and_execute (string, from_file, flags)
 	      dispose_command (command);
 	      dispose_fd_bitmap (bitmap);
 	      discard_unwind_frame ("pe_dispose");
+
+	      if (flags & SEVAL_ONECMD)
+		break;
 	    }
 	}
       else
diff --git a/msys/packages/bash/3.1/patchlevel.h b/msys/packages/bash/3.1/patchlevel.h
index e8ce389..7a763bb 100644
--- a/msys/packages/bash/3.1/patchlevel.h
+++ b/msys/packages/bash/3.1/patchlevel.h
@@ -25,6 +25,6 @@
    regexp `^#define[ 	]*PATCHLEVEL', since that's what support/mkversion.sh
    looks for to find the patch level (for the sccs version string). */
 
-#define PATCHLEVEL 17
+#define PATCHLEVEL 18
 
 #endif /* _PATCHLEVEL_H_ */
diff --git a/msys/packages/bash/3.1/variables.c b/msys/packages/bash/3.1/variables.c
index c5a0207..84397c7 100644
--- a/msys/packages/bash/3.1/variables.c
+++ b/msys/packages/bash/3.1/variables.c
@@ -310,12 +310,10 @@ initialize_shell_variables (env, privmode)
 	  temp_string[char_index] = ' ';
 	  strcpy (temp_string + char_index + 1, string);
 
-	  parse_and_execute (temp_string, name, SEVAL_NONINT|SEVAL_NOHIST);
-
-	  /* Ancient backwards compatibility.  Old versions of bash exported
-	     functions like name()=() {...} */
-	  if (name[char_index - 1] == ')' && name[char_index - 2] == '(')
-	    name[char_index - 2] = '\0';
+	  /* Don't import function names that are invalid identifiers from the
+	     environment. */
+	  if (legal_identifier (name))
+	    parse_and_execute (temp_string, name, SEVAL_NONINT|SEVAL_NOHIST|SEVAL_FUNCDEF|SEVAL_ONECMD);
 
 	  if (temp_var = find_function (name))
 	    {
@@ -324,10 +322,6 @@ initialize_shell_variables (env, privmode)
 	    }
 	  else
 	    report_error (_("error importing function definition for `%s'"), name);
-
-	  /* ( */
-	  if (name[char_index - 1] == ')' && name[char_index - 2] == '\0')
-	    name[char_index - 2] = '(';		/* ) */
 	}
 #if defined (ARRAY_VARS)
 #  if 0
-- 
2.1.0.msysgit.0

